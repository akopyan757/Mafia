import kotlin.Boolean;

---TABLE
CREATE TABLE IF NOT EXISTS `game`(
    `id` INTEGER PRIMARY KEY NOT NULL,
    `title` TEXT NOT NULL,
    `date` TEXT NOT NULL,
    `round` INTEGER NOT NULL,
    `firstSpeechPlayer` INTEGER NOT NULL,
    `stage` TEXT NOT NULL,
    `voteCandidates` TEXT NOT NULL,
    `queueStage` TEXT NOT NULL,
    `totalTime` INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS `playerGame`(
    `playerId` INTEGER NOT NULL,
    `gameId` INTEGER NOT NULL,
    `number` INTEGER NOT NULL,
    `name` TEXT NOT NULL,
    `role` TEXT NOT NULL,
    `isNewPlayer` INTEGER AS Boolean NOT NULL ,
    `isAlive` INTEGER AS Boolean NOT NULL,
    `isDeleted` INTEGER AS Boolean NOT NULL,
    `isClient` INTEGER AS Boolean NOT NULL,
    `isVoted` INTEGER AS Boolean NOT NULL,
    `isKilled` INTEGER AS Boolean NOT NULL,
    `actions` TEXT NOT NULL,
    `fouls` INTEGER NOT NULL,
    `bestMove` TEXT,
     PRIMARY KEY (gameId, playerId, number)
);

selectAllGames:
SELECT * FROM `game`;

selectGameById:
SELECT * FROM `game` WHERE id == ?;

insertGame:
INSERT OR REPLACE INTO `game`(
    id, title, date, round, firstSpeechPlayer, stage, voteCandidates,  queueStage, totalTime
) VALUES ?;

deleteGameById:
DELETE FROM `game` WHERE id == ?;

selectPlayersInGame:
SELECT * FROM `playerGame` WHERE gameId == ?;

selectPlayerGamesById:
SELECT * FROM `playerGame` WHERE playerId == ?;

insertPlayerGame:
INSERT OR REPLACE INTO `playerGame`(
    playerId, gameId, number, name, role, isNewPlayer, isAlive, isDeleted,
    isClient, isVoted, isKilled, actions,  fouls, bestMove
) VALUES ?;

deletePlayerFromGame:
DELETE FROM `playerGame` WHERE gameId == ?;